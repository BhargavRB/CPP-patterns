Pattern 1.
#include <iostream>
using namespace std;

void pattern1(int n)
{
    int i,j;
    for(i=0;i<n;i++)
    {
        for(j=0;j<n;j++){
            cout << '*';
        }
        cout << endl;
    }
}

int main() {
    int n;
    cout << "Enter Number :- ";
    cin >> n;
    pattern1(n);
    return 0;
}

Result:- 

*****
*****
*****
*****
*****

Pattern 2.

void pattern2(int n)
{
    int i,j;
    for(i=0;i<n;i++)
    {
        for(j=0;j<=i;j++){
            cout << '*';
        }
        cout << endl;
    }
}

Result:- 

*
**
***
****
*****

Pattern 3.

void pattern3(int n)
{
    int i,j;
    for(i=1;i<=n;i++)
    {
        for(j=1;j<=i;j++){
            cout << j;
        }
        cout << endl;
    }
}

Result:- 
1
12
123
1234
12345

Pattern 4.

void pattern4(int n)
{
    int i,j;
    for(i=1;i<=n;i++)
    {
        for(j=1;j<=i;j++){
            cout << i;
        }
        cout << endl;
    }
}

Result:- 

1
22
333
4444
55555

Pattern 5.

void pattern5(int n)
{
    int i,j;
    for(i=0;i<n;i++)
    {
        for(j=0;j<n-i;j++){
            cout << "*";
        }
        cout << endl;
    }
}

Result :-

*****
****
***
**
*

Pattern 6.

void pattern6(int n)
{
    int i,j;
    for(i=0;i<n;i++)
    {
        for(j=n;j>i;j--){
            cout << n-j+1;
        }
        cout << endl;
    }
}

Result :-

12345
1234
123
12
1 

Pattern 7.

void pattern7(int n)
{
    int i,j,k,l;
    
    for(i=0;i<n;i++)
    {
        for(k=0;k<=n-i-1;k++){
            cout << " ";
        }
        
        for(j=0;j<2*i+1;j++){
            cout << "*";
        }
        
        
        for(l=0;l<=n-i-1;l++){
            cout << " ";
        }
        
        cout << endl;
    }
}

Result:-

     *     
    ***    
   *****   
  *******  
 ********* 

Pattern 8.

void pattern8(int n)
{
    int i,j,k,l;
    
    for(i=0;i<n;i++)
    {
        for(k=0;k<i;k++){
            cout << " ";
        }
        
        for(j=0;j<(n*2)-(2*i+1);j++){
            cout << "*";
        }
        
        
        for(l=0;l<=i;l++){
            cout << " ";
        }
        
        cout << endl;
    }
}


Result :-

********* 
 *******  
  *****   
   ***    
    *

Pattern 9:-

void pattern9(int n)
{
    int i,j,k;
    
    for(i=0;i<n;i++)
    {
        for(k=0;k<n-i-1;k++){
            cout << " ";
        }
        
        for(k=0;k<(2*i+1);k++){
            cout << "*";
        }
        
        for(k=0;k<n-i-1;k++){
            cout << " ";
        }
        
        cout << endl;
    }
    
    for(i=0;i<n;i++)
    {
         for(j=0;j<i;j++){
            cout << " ";
        }
        
        for(j=0;j<(n*2)-(2*i+1);j++){
            cout << "*";
        }
        
        
        for(j=0;j<i;j++){
            cout << " ";
        }
        
        cout << endl;
    }
}


Result :-

    *    
   ***   
  *****  
 ******* 
*********
*********
 ******* 
  *****  
   ***   
    * 


Pattern 10.


void pattern10(int n)
{
    int i,j,star;
    
    for(i=0;i<=2*n-1;i++)
    {
        star = i;
        if(i > n){
            star = 2*n-i; 
        }
        for(j=0;j<star;j++){
            cout << "*";
        }
        
        cout << endl;
    }
}

Result:- 

*
**
***
****
*****
****
***
**
*

Pattern 11.

void pattern11(int n)
{
    int i,j;

    int start = 1;    
    
    for(i=0;i<n;i++)
    {
        if(i%2==0){
            start = 1; 
        }else{
            start = 0;
        }
        
        for(j=0;j<=i;j++){
            cout << start;
            start = 1-start;
        }
        
        cout << endl;
    }
}


Result :-

1
01
101
0101
10101

Pattern 12.

void pattern12(int n)
{
    int i,j;

    int spaces = 2*(n-1);
    for(i=1;i<=n;i++)
    {
        for(j=1;j<=i;j++){
            cout << j;
        }
        
        for(j=1;j<=spaces;j++){
            cout <<" ";
        }
        
        for(j=i;j>=1;j--){
            cout << j;
        }
        
        cout << endl;
        spaces -= 2;
    }
}


Result:- 

1        1
12      21
123    321
1234  4321
1234554321

Pattern 13.

void pattern13(int n)
{
    int i,j,k = 1;

    for(i=0;i<n;i++)
    {
        for(j=0;j<=i;j++){
            cout << k << " ";
            k += 1;
        }
        
        cout << endl;
    }
}

Result :- 

1 
2 3 
4 5 6 
7 8 9 10 
11 12 13 14 15

Pattern 14.

void pattern14(int n)
{
    int i;

    for(i=0;i<n;i++)
    {
        for(char j='A';j<= 'A'+i;j++){
            cout << j;
        }
        
        cout << endl;
    }
} 

Result:- 

A
AB
ABC
ABCD
ABCDE


Pattern 15.

void pattern15(int n)
{
    int i;

    for(i=0;i<n;i++)
    {
        for(char j='A';j<= 'A'+(n-i-1);j++){
            cout << j;
        }
        
        cout << endl;
    }
}

Result:-

ABCDE
ABCD
ABC
AB
A

Pattern 16.

void pattern16(int n)
{
    int i;

    for(i=0;i<n;i++)
    {
        char ch = 'A'+i;
        for(int j=0;j<=i;j++){
            cout << ch;
        }
        
        cout << endl;
    }
}

Result :-

A
BB
CCC
DDDD
EEEEE

Pattern 17.

void pattern17(int n)
{
    int i;

    for(i=0;i<n;i++)
    {
        for(int j=0;j<(n-i-1);j++){
            cout << " ";
        }
        
        char ch = 'A';

        int breakpoint = (2*i+1) / 2;
        for(int j=1;j<=2*i+1;j++){
            cout << ch;
            
            if (j <= breakpoint){
                ch++;
            }else{
                ch--;
            }
        }
        
        cout << endl;
    }
}

Result:- 

    A
   ABA
  ABCBA
 ABCDCBA
ABCDEDCBA

Pattern 18.

void pattern18(int n)
{
    int i;

    for(i=0;i<n;i++)
    {
        char ch = 'A' + (n-i-1);
        for(int j=0;j<=i;j++)
        {
            cout << ch++ << " ";
        }
    
        cout << endl;
    }
}

Result:-

E 
D E 
C D E 
B C D E 
A B C D E 

Pattern 19.

void pattern19(int n)
{
    int i;

    for(i=0;i<n;i++)
    {
        for(int j=0;j<n-i;j++)
        {
           cout << '*';
        }
        
        for(int j=1;j<2*i+1;j++)
        {
           cout << ' ';
        }
        
        for(int j=0;j<n-i;j++)
        {
           cout << '*';
        }
        
        
        cout << endl;
    }
    
    int space = 2*n-2;
    
    for(i=0;i<n;i++)
    {
        for(int j=0;j<=i;j++)
        {
           cout << '*';
        }
        
        for(int j=0;j<space;j++)
        {
           cout << ' ';
        }
        
        for(int j=0;j<=i;j++)
        {
           cout << '*';
        }
        
        space-= 2;
        
        cout << endl;
    }
}


Result:- 

**********
****  ****
***    ***
**      **
*        *
*        *
**      **
***    ***
****  ****
**********

Pattern 20.

void pattern20(int n)
{
    int i,spaces;
    
    for(i=0;i<2*n;i++)
    {
        int loop1;
        if(i > n){
          loop1--;
        }else{
          loop1 = i;
        }
        
        for(int j=0;j<loop1;j++)
        {
           cout << '*';
        }
        
        if(i > n){
          spaces += 2;
        }else{
          spaces = (2*n) - (2*i);
        }
    
        for(int j=0;j<spaces;j++)
        {
           cout << ' ';
        }
        
        for(int j=0;j<loop1;j++)
        {
           cout << '*';
        }
        
        cout << endl;   
    }
}

Result:-

*        *
**      **
***    ***
****  ****
**********
****  ****
***    ***
**      **
*        *


Pattern 21.


void pattern21(int n)
{
    int i,j;
    
    for(i=0;i<n;i++)
    {
        for(j=0;j<n;j++){
            if(j == 0 || i == 0 || j == n-1 || i == n-1){
               cout << '*';
            }else{
                cout << ' ';
            }
        }
        cout << endl;   
    }
}

Result:-

*****
*   *
*   *
*   *
*****

Pattern 22.

void pattern22(int n)
{
    int i,j;
    
    for(i=0;i<2*n-1;i++)
    {
        for(j=0;j<2*n-1;j++){
            int top = i;
            int bottom = j;
            int right = (2 * n - 2) - j;
            int left = (2 * n - 2) - i;
            
           cout << n - min(min(top,bottom),min(right,left)) << " ";
        }
        cout << endl;   
    }
}

Result:- 

5 5 5 5 5 5 5 5 5 
5 4 4 4 4 4 4 4 5 
5 4 3 3 3 3 3 4 5 
5 4 3 2 2 2 3 4 5 
5 4 3 2 1 2 3 4 5 
5 4 3 2 2 2 3 4 5 
5 4 3 3 3 3 3 4 5 
5 4 4 4 4 4 4 4 5 
5 5 5 5 5 5 5 5 5

Pattern 23.

void pattern23(int n)
{
    int i;

    for(i=0;i<2*n;i++)
    {
        int loop1;
        if(i > n){
          loop1--;
        }else{
          loop1 = i;
        }
        
        for(int j=0;j<loop1;j++)
        {
           cout << '*';
        }
    
        for(int j=0;j<2*n-2;j++)
        {
           cout << ' ';
        }
        
        for(int j=0;j<loop1;j++)
        {
           cout << '*';
        }
        
         for(int j=0;j<2*n-2;j++)
        {
           cout << ' ';
        }
        
        for(int j=0;j<loop1;j++)
        {
           cout << '*';
        }
        
        cout << endl;   
    }
}

Result:- 

*        *        *
**        **        **
***        ***        ***
****        ****        ****
*****        *****        *****
****        ****        ****
***        ***        ***
**        **        **
*        *        *
	